<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Readchar on Michael W. Kearney</title>
    <link>/tags/readchar/</link>
    <description>Recent content in Readchar on Michael W. Kearney</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© Michael W. Kearney 2017</copyright>
    <lastBuildDate>Fri, 03 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/readchar/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>readChar.R</title>
      <link>/post/2017/11/03/readcharr/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/11/03/readcharr/</guid>
      <description>Function of the day When I read text into an R session, I typically use either base::readLines() or—the tidyversion analog—readr::read_lines(). Although I’ve long been aware of readChar(), I’ve managed to avoid learning what it actually does.
Function This post introduces the readChar() function.
x &amp;lt;- help(&amp;quot;?&amp;quot;, &amp;quot;utils&amp;quot;) print(x)  Example x &amp;lt;- example(&amp;quot;readChar&amp;quot;, package = &amp;quot;base&amp;quot;, give.lines = TRUE) tfse::map_chr(&amp;quot;message&amp;quot;, x) ## ### Name: readChar ## ### Title: Transfer Character Strings To and From Connections ## ### Aliases: readChar writeChar ## ### Keywords: file connection ## ## ### ** Examples ## ## ## test fixed-length strings ## zz &amp;lt;- file(&amp;quot;testchar&amp;quot;, &amp;quot;wb&amp;quot;) ## x &amp;lt;- c(&amp;quot;a&amp;quot;, &amp;quot;this will be truncated&amp;quot;, &amp;quot;abc&amp;quot;) ## nc &amp;lt;- c(3, 10, 3) ## writeChar(x, zz, nc, eos = NULL) ## writeChar(x, zz, eos = &amp;quot;\r\n&amp;quot;) ## close(zz) ## ## zz &amp;lt;- file(&amp;quot;testchar&amp;quot;, &amp;quot;rb&amp;quot;) ## readChar(zz, nc) ## readChar(zz, nchar(x)+3) # need to read the terminator explicitly ## close(zz) ## unlink(&amp;quot;testchar&amp;quot;) ## ## character(0)   </description>
    </item>
    
  </channel>
</rss>